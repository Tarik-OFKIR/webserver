{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n\n// const API_BASE_URL = \"http://backend:11002\"; //  backend est le nom du service Kubernetes\n// //  Remplace 11002 par le bon port\n\n// function App() {\n//   const [users, setUsers] = useState([]);\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n\n//   // Charger la liste des utilisateurs\n//   useEffect(() => {\n//     fetch(`${API_BASE_URL}/Users`)\n//       .then((res) => {\n//         console.log(\" Réponse reçue de l'API:\", res);\n//         return res.json();\n//       })\n//       .then((data) => {\n//         console.log(\" Utilisateurs reçus:\", data);\n//         setUsers(data);\n//       })\n//       .catch((err) => console.error(\" Erreur chargement utilisateurs:\", err));\n//   }, []);\n\n//   // Fonction pour ajouter un utilisateur\n//   const addUser = async () => {\n//     if (!name || !email) {\n//       alert(\"Merci de remplir tous les champs !\");\n//       return;\n//     }\n\n//     const newUser = { name, email };\n//     console.log(\" Envoi des données:\", newUser);\n\n//     const response = await fetch(`${API_BASE_URL}/Users`, {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(newUser),\n//     });\n\n//     console.log(\" Réponse reçue:\", response);\n\n//     if (response.ok) {\n//       alert(\" Utilisateur ajouté !\");\n//       setUsers([...users, newUser]);\n//     } else {\n//       alert(\" Erreur lors de l'ajout !\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n//       <h2> Liste des utilisateurs</h2>\n//       <ul>\n//         {users.map((user, index) => (\n//           <li key={index}>\n//             {user.name} - {user.email}\n//           </li>\n//         ))}\n//       </ul>\n\n//       <h2> Ajouter un utilisateur</h2>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Nom\"\n//         value={name}\n//         onChange={(e) => setName(e.target.value)}\n//       />\n//       <input\n//         type=\"email\"\n//         placeholder=\"Email\"\n//         value={email}\n//         onChange={(e) => setEmail(e.target.value)}\n//       />\n//       <button onClick={addUser}>Ajouter</button>\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["D:/dev/test/houda/webserver-/frontend/src/index.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n\r\n// const API_BASE_URL = \"http://backend:11002\"; //  backend est le nom du service Kubernetes\r\n// //  Remplace 11002 par le bon port\r\n\r\n// function App() {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [name, setName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n\r\n//   // Charger la liste des utilisateurs\r\n//   useEffect(() => {\r\n//     fetch(`${API_BASE_URL}/Users`)\r\n//       .then((res) => {\r\n//         console.log(\" Réponse reçue de l'API:\", res);\r\n//         return res.json();\r\n//       })\r\n//       .then((data) => {\r\n//         console.log(\" Utilisateurs reçus:\", data);\r\n//         setUsers(data);\r\n//       })\r\n//       .catch((err) => console.error(\" Erreur chargement utilisateurs:\", err));\r\n//   }, []);\r\n\r\n//   // Fonction pour ajouter un utilisateur\r\n//   const addUser = async () => {\r\n//     if (!name || !email) {\r\n//       alert(\"Merci de remplir tous les champs !\");\r\n//       return;\r\n//     }\r\n\r\n//     const newUser = { name, email };\r\n//     console.log(\" Envoi des données:\", newUser);\r\n\r\n//     const response = await fetch(`${API_BASE_URL}/Users`, {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(newUser),\r\n//     });\r\n\r\n//     console.log(\" Réponse reçue:\", response);\r\n\r\n//     if (response.ok) {\r\n//       alert(\" Utilisateur ajouté !\");\r\n//       setUsers([...users, newUser]);\r\n//     } else {\r\n//       alert(\" Erreur lors de l'ajout !\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n//       <h2> Liste des utilisateurs</h2>\r\n//       <ul>\r\n//         {users.map((user, index) => (\r\n//           <li key={index}>\r\n//             {user.name} - {user.email}\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       <h2> Ajouter un utilisateur</h2>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Nom\"\r\n//         value={name}\r\n//         onChange={(e) => setName(e.target.value)}\r\n//       />\r\n//       <input\r\n//         type=\"email\"\r\n//         placeholder=\"Email\"\r\n//         value={email}\r\n//         onChange={(e) => setEmail(e.target.value)}\r\n//       />\r\n//       <button onClick={addUser}>Ajouter</button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n"],"mappings":"AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}